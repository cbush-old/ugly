#ifdef INTERN
#define EXTERN
#else
#define EXTERN extern
#endif

#define INSTANTIATE_ENABLE(MODE) \
  EXTERN template void Context::enable< MODE >(); \
  EXTERN template void Context::disable< MODE >(); \
  EXTERN template bool Context::is_enabled<MODE>() const;

INSTANTIATE_ENABLE(GL_BLEND);
INSTANTIATE_ENABLE(GL_COLOR_LOGIC_OP);
INSTANTIATE_ENABLE(GL_CULL_FACE);
INSTANTIATE_ENABLE(GL_DEPTH_CLAMP);
INSTANTIATE_ENABLE(GL_DEPTH_TEST);
INSTANTIATE_ENABLE(GL_DITHER);
INSTANTIATE_ENABLE(GL_FRAMEBUFFER_SRGB);
INSTANTIATE_ENABLE(GL_LINE_SMOOTH);
INSTANTIATE_ENABLE(GL_MULTISAMPLE);
INSTANTIATE_ENABLE(GL_POLYGON_OFFSET_FILL);
INSTANTIATE_ENABLE(GL_POLYGON_OFFSET_LINE);
INSTANTIATE_ENABLE(GL_POLYGON_OFFSET_POINT);
INSTANTIATE_ENABLE(GL_POLYGON_SMOOTH);
INSTANTIATE_ENABLE(GL_PRIMITIVE_RESTART);
INSTANTIATE_ENABLE(GL_RASTERIZER_DISCARD);
INSTANTIATE_ENABLE(GL_SAMPLE_ALPHA_TO_COVERAGE);
INSTANTIATE_ENABLE(GL_SAMPLE_ALPHA_TO_ONE);
INSTANTIATE_ENABLE(GL_SAMPLE_COVERAGE);
INSTANTIATE_ENABLE(GL_SAMPLE_SHADING);
INSTANTIATE_ENABLE(GL_SAMPLE_MASK);
INSTANTIATE_ENABLE(GL_SCISSOR_TEST);
INSTANTIATE_ENABLE(GL_STENCIL_TEST);
INSTANTIATE_ENABLE(GL_TEXTURE_CUBE_MAP_SEAMLESS);
INSTANTIATE_ENABLE(GL_PROGRAM_POINT_SIZE);
#if GL_4_5
INSTANTIATE_ENABLE(GL_DEBUG_OUTPUT);
INSTANTIATE_ENABLE(GL_DEBUG_OUTPUT_SYNCHRONOUS);
INSTANTIATE_ENABLE(GL_PRIMITIVE_RESTART_FIXED_INDEX);
#endif

#undef INSTANTIATE_ENABLE

// special lists
EXTERN template std::vector<int> Context::get<GL_COMPRESSED_TEXTURE_FORMATS, GL_NUM_COMPRESSED_TEXTURE_FORMATS>() const;
EXTERN template std::vector<int> Context::get<GL_PROGRAM_BINARY_FORMATS, GL_NUM_PROGRAM_BINARY_FORMATS>() const;


EXTERN template void Context::draw_arrays<GL_POINTS>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_LINE_STRIP>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_LINE_LOOP>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_LINES>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_LINE_STRIP_ADJACENCY>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_LINES_ADJACENCY>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_TRIANGLE_STRIP>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_TRIANGLE_FAN>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_TRIANGLES>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_TRIANGLE_STRIP_ADJACENCY>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_TRIANGLES_ADJACENCY>(int, GLsizei);
EXTERN template void Context::draw_arrays<GL_PATCHES>(int, GLsizei);

#undef EXTERN
